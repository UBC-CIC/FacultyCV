type User {
  user_id: String!
  first_name: String
  last_name: String
  preferred_name: String
  email: String
  role: String
  bio: String
  rank: String
  primary_department: String
  secondary_department: String
  primary_faculty: String
  secondary_faculty: String
  campus: String
  keywords: String
  institution_user_id: String
  scopus_id: String
  orcid_id: String
  joined_timestamp: String
}

type DataSection {
  data_section_id: String!
  title: String!
  description: String!
  data_type: String
  attributes: AWSJSON! # JSON
  archive: Boolean
}

type UserCVData {
  user_cv_data_id: String!
  user_id: String!
  data_section_id: String!
  data_details: AWSJSON! #JSON
  archive: Boolean
  archive_timestamp: String
}

type ElsevierAuthorProfile {
  last_name: String!
  first_name: String!
  name_variants: String
  subjects: String
  current_affiliation: String
  scopus_id: String!
  orcid: String
}

type OrcidAuthorProfile {
  last_name: String!
  first_name: String!
  credit_name: String
  name_variants: String
  keywords: String
  researcher_urls: [ String ]
  orcid_id: String!
}

type UniversityInfo {
  university_info_id: String!
  type: String
  value: String
}

type UserConnection {
  user_connection_id: String!
  faculty_user_id: String!
  faculty_first_name: String!
  faculty_last_name: String!
  faculty_email: String!
  assistant_user_id: String!
  assistant_first_name: String!
  assistant_last_name: String!
  assistant_email: String!
  status: String!
}

type Template {
  template_id: String!
  title: String!
  data_section_ids: String!
}

type TeachingData {
  teaching_data_id: String!
  data_details: AWSJSON! #JSON
  institution_user_id: String!
}

type Publication {
  publication_id: String!
  # type: String!
  title: String!
  cited_by: Int
  keywords: [String],
  journal: String,
  link: String,
  doi: String,
  year_published: String,
  author_names: [String]!
  author_ids: [String]!
}

type PublicationMatches {
  publications: [ Publication ],
  total_results: Int!,
  total_pages: Int!,
  current_page: Int!
}

type SecureFunding {
  secure_funding_id: String!
  first_name: String!
  last_name: String!
  data_details: AWSJSON! #JSON
}

type Patent {
  patent_id: String!
  first_name: String!
  last_name: String!
  data_details: AWSJSON! #JSON
}

type Query {
    getUser(email: String!): User
    getExistingUser(institution_user_id: String!): User
    getAllSections: [ DataSection ]
    getArchivedSections: [ DataSection ]
    getUserCVData(user_id: String!, data_section_id: String!): [UserCVData]
    getArchivedUserCVData(user_id: String!): [UserCVData]
    getElsevierAuthorMatches(first_name: String!, last_name: String!, institution_name: String): [ ElsevierAuthorProfile ]!
    getOrcidAuthorMatches(first_name: String!, last_name: String!, institution_name: String): [ OrcidAuthorProfile ]!
    getAllUniversityInfo: [ UniversityInfo ]
    getUserConnections(faculty_user_id: String, assistant_user_id: String): [ UserConnection ]
    getAllTemplates: [ Template ]
    getTeachingDataMatches(institution_user_id: String!): [TeachingData]
    getPublicationMatches(scopus_id: String!, page_number: Int!, results_per_page: Int!): PublicationMatches
    getSecureFundingMatches(first_name: String!, last_name: String!): [SecureFunding]
    getAllUsers: [ User ]
    getPatentMatches(first_name: String!, last_name: String!): [Patent]
}

type Mutation {
    addToUserGroup(userName: String!, userGroup: String!): String

    generatePDF(first_name: String!): String

    addUser(
      first_name: String!
      last_name: String!
      preferred_name: String
      email: String!
      role: String!
      bio: String
      rank: String
      primary_department: String
      secondary_department: String
      primary_faculty: String
      secondary_faculty: String
      campus: String
      keywords: String
      institution_user_id: String
      scopus_id: String
      orcid_id: String
    ): String

    updateUser(
      first_name: String
      last_name: String
      preferred_name: String
      email: String
      role: String
      bio: String
      rank: String
      primary_department: String
      secondary_department: String
      primary_faculty: String
      secondary_faculty: String
      campus: String
      keywords: String
      institution_user_id: String
      scopus_id: String
      orcid_id: String
      user_id: String!
    ): String

    addSection(
      title: String!
      description: String!
      data_type: String
      attributes: AWSJSON! # JSON
    ): String

    updateSection(
      data_section_id: String!
      archive: Boolean
    ): String

    addUserCVData(
      user_id: String!
      data_section_id: String!
      data_details: AWSJSON! # JSON
    ): String

    updateUserCVData(
      user_cv_data_id: String!
      data_details: AWSJSON # JSON
      archive: Boolean
      archive_timestamp: String
    ): String

    addUniversityInfo(
      type: String!
      value: String!
    ): String

    addUserConnection(
      faculty_user_id: String!
      faculty_first_name: String!
      faculty_last_name: String!
      faculty_email: String!
      assistant_user_id: String!
      assistant_first_name: String!
      assistant_last_name: String!
      assistant_email: String!
      status: String!
    ): String

    updateUserConnection(
      user_connection_id: String!
      status: String!
    ): String

    deleteUserConnection(
      user_connection_id: String!
    ): String

    updateUniversityInfo(
      university_info_id: String!
      type: String
      value: String
    ): String

    linkScopusId(
      user_id: String!,
      scopus_id: String!,
      orcid_id: String
    ): String

    linkOrcid(
      user_id: String!,
      orcid_id: String!
    ): String

    addTemplate(
      title: String!
      data_section_ids: String!
    ): String

    updateTemplate(
      template_id: String!
      title: String
      data_section_ids: String
    ): String

    deleteTemplate(
      template_id: String!
    ): String
}